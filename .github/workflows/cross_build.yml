name: cross-build

on:
  pull_request:
  push:
    branches:
      - rust-no-runtime
    # tags:
    #   - "v*.*.*"

jobs:
  deploy:
    name: deploy
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - os: ubuntu-latest
            target: i686-unknown-linux-musl
          - os: ubuntu-latest
            target: arm-unknown-linux-gnueabi
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - os: macOS-latest
            target: aarch64-apple-darwin
          - os: macOS-latest
            target: x86_64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.config.target }}

      - name: Build wheel package
        shell: bash
        run: |
          python -m pip install wheel
          pip install setuptools_rust
          python setup.py bdist_wheel

    #   - name: Checkout
    #     uses: actions/checkout@v3
    #   - name: Install rust
    #     uses: actions-rs/toolchain@v1
    #     with:
    #       toolchain: stable
    #       profile: minimal
    #       override: true
    #       target: ${{ matrix.config.target }}

    #   - name: Build target
    #     if: matrix.config.os == 'ubuntu-latest'
    #     shell: bash
    #     run: |
    #       echo "hello world"
    #       rustup target add ${{ matrix.config.target }}
    #       cargo build --release --target ${{ matrix.config.target }} --manifest-path ./Cargo.toml

    #   - name: Build Apple targets
    #     if: matrix.config.os == 'macOS-latest'
    #     shell: bash
    #     run: |
    #       echo "hello world"
    #       rustup target add aarch64-apple-darwin
    #       cargo build --release --target ${{ matrix.config.target }} --manifest-path ./Cargo.toml
